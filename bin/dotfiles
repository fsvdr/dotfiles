#!/usr/bin/env bash
###############################################################################
# DOTFILES SHELL PROGRAM                                                      #
###############################################################################

# Make sure to terminate if something goes wrong
set -e

DOTFILES_ROOT="$HOME/dotfiles"

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1

# Let's buckle up ourselves with some utilities
source "$DOTFILES_ROOT/scripts/helpers.sh"

# Import symlink script
source "$DOTFILES_ROOT/scripts/symlink.sh"

# Import backup script
source "$DOTFILES_ROOT/scripts/backup.sh"

# Import git script
source "$DOTFILES_ROOT/git/bootstrap.sh"

# Import dev script
source "$DOTFILES_ROOT/dev/bootstrap.sh"

# Import macos script
source "$DOTFILES_ROOT/macos/bootstrap.sh"

# Import apps installation script
source "$DOTFILES_ROOT/macos/apps.sh"

# Import atom scripts
source "$DOTFILES_ROOT/atom/bootstrap.sh"

display_help () {
  echo ""
  echo "Dotfiles - A manager"
  echo "Usage: $BIN_NAME <command>"
  echo ""
  echo "where <command> is one of:"
  echo "  help      - Displays this message"
  echo "  backup    - Backs up any previous dotfiles"
  echo "  symlink   - Symlinks dotfiles (backup is done first)"
  echo "  bootstrap - Takes care of setting up your environment as a new one"
  echo "  git       - Takes care of git dotfiles configuration"
  echo "  dev       - Installs dependencies for dev environment"
  echo "  macos     - Apply macOS system defaults"
  echo "  apps      - Install apps (App Store and via cask)"
  echo "  atom      - Install atom packages"
  echo ""
}

display_command_error () {
  display_error "Command $COMMAND_NAME was not found. For a list of available commands type"
  echo "  dotfiles help"
}

bootstrap () {
  echo "Dotfiles"
  echo "Hello there! Let's set you in shall we?"

  echo ""
  echo "**********************************************************************"
  echo "* STEP 1 OF 7  -  Backup                                             *"
  echo "**********************************************************************"

  do_backup

  echo "**********************************************************************"
  echo "* STEP 2 OF 7  -  Git configuration                                  *"
  echo "* WARNING: This step requires some interaction                       *"
  echo "**********************************************************************"

  bootstrap_git

  echo "**********************************************************************"
  echo "* STEP 3 OF 7  -  Link dotfiles                                      *"
  echo "**********************************************************************"

  do_symlink

  echo "**********************************************************************"
  echo "* STEP 4 OF 7  -  Configure macOS defaults                           *"
  echo "**********************************************************************"

  bootstrap_macos

  echo "**********************************************************************"
  echo "* STEP 5 OF 7  -  Configure dev environment                          *"
  echo "**********************************************************************"

  bootstrap_dev

  echo "**********************************************************************"
  echo "* STEP 6 OF 7  -  Install applications                               *"
  echo "**********************************************************************"

  bootstrap_apps

  echo "**********************************************************************"
  echo "* STEP 7 OF 7  -  Configure editor                                   *"
  echo "* WARNING: This step requires some interaction                       *"
  echo "**********************************************************************"

  display_warning "Before proceeding please open atom and install the shell scripts"

  request-confirmation "Ready?"
  if [[ "$REPLY" =~ ^[Yy]$ ]] || [[ "$REPLY" = "" ]]; then
    bootstrap_atom
  else
    display_info "Skipping editor configuration..."
  fi

  echo "**********************************************************************"
  echo "* DONE  -  Restart your computer to persist changes                  *"
  echo "**********************************************************************"

  request-confirmation "Do you want to restart now?"
  if [[ "$REPLY" =~ ^[Yy]$ ]] || [[ "$REPLY" = "" ]]; then
    sudo shutdown -r now
  fi

  echo ""
  echo "Well that was a cool ride wasn't it? ðŸ¤–"
  echo ""
}

edit-dotfiles () {
  $EDITOR $DOTFILES_ROOT
}

case "$COMMAND_NAME" in
  "" | "help")  display_help;;
  "bootstrap")  bootstrap;;
  "backup")     do_backup;;
  "git")        do_backup && bootstrap_git && do_symlink;;
  "symlink")    do_symlink;;
  "macos")      bootstrap_macos;;
  "dev")        bootstrap_dev;;
  "apps")       bootstrap_apps;;
  "atom")       do_symlink && bootstrap_atom;;
  "update")     echo "Update package managers and system";;
  "disengage")  echo "Safeguard atom and other data for leaving the system";;
  "edit")       edit-dotfiles;;
  *)            display_command_error;;
esac
