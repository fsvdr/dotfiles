#!/usr/bin/env bash
###############################################################################
# DOTFILES SHELL PROGRAM                                                      #
###############################################################################

# Make sure to terminate if something goes wrong
set -e

DOTFILES_ROOT="$HOME/.dotfiles"
SCREENSHOTS_LOC="ðŸ“·  Screenshots"

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1

# Let's buckle up ourselves with some utilities
source "$DOTFILES_ROOT/scripts/helpers.sh"

# Import maintenance related scripts
source "$DOTFILES_ROOT/scripts/maintenance.sh"

# Import symlink script
source "$DOTFILES_ROOT/scripts/symlink.sh"

# Import backup script
source "$DOTFILES_ROOT/scripts/backup.sh"

# Import git script
source "$DOTFILES_ROOT/git/bootstrap.sh"

# Import dev script
source "$DOTFILES_ROOT/dev/bootstrap.sh"

# Import macos script
source "$DOTFILES_ROOT/macos/bootstrap.sh"

# Import apps installation script
source "$DOTFILES_ROOT/macos/apps.sh"

# Import atom scripts
source "$DOTFILES_ROOT/atom/bootstrap.sh"

display-help () {
  echo ""
  echo "Dotfiles - A manager"
  echo "Usage: $BIN_NAME <command>"
  echo ""
  echo "where <command> is one of:"
  echo "  help      - Displays this message"
  echo "  bootstrap - Takes care of setting up your environment as a new one"
  echo "  backup    - Backs up any previous dotfiles"
  echo "  git       - Takes care of git dotfiles configuration"
  echo "  symlink   - Symlinks dotfiles (backup is done first)"
  echo "  macos     - Apply macOS system defaults"
  echo "  dev       - Installs dependencies for dev environment"
  echo "  apps      - Install apps (App Store and via cask)"
  echo "  atom      - Install atom packages"
  echo "  update    - Updates packages and pkg managers (OS, brew, npm)"
  echo "  clean     - Clean up caches (brew, npm)"
  echo "  disengage - Pack important data up before leaving the ship"
  echo "  edit      - Open dotfiles in prefered editor"
  echo ""
}

display-command-error () {
  error-status "Command $COMMAND_NAME was not found. For a list of available commands type"
  echo "  dotfiles help"
}

bootstrap () {
  echo "Dotfiles"
  echo "ðŸ¤–  Well hello sir, this computer seems a bit odd. Let me configure"
  echo "and customize it for you."

  echo ""
  echo "**********************************************************************"
  echo "* STEP 1 OF 8  -  Backup                                             *"
  echo "**********************************************************************"
  echo ""
  do-backup
  echo ""
  echo "**********************************************************************"
  echo "* STEP 2 OF 8  -  Git configuration                                  *"
  echo "* WARNING: This step requires some interaction                       *"
  echo "**********************************************************************"
  echo ""
  bootstrap-git
  echo ""
  echo "**********************************************************************"
  echo "* STEP 3 OF 8  -  Link dotfiles                                      *"
  echo "**********************************************************************"
  echo ""
  do-symlink
  echo ""
  echo "**********************************************************************"
  echo "* STEP 4 OF 8  -  Configure macOS defaults                           *"
  echo "**********************************************************************"
  echo ""
  bootstrap-macos
  echo ""
  echo "**********************************************************************"
  echo "* STEP 5 OF 8  -  Configure dev environment                          *"
  echo "**********************************************************************"
  echo ""
  bootstrap-dev
  echo ""
  echo "**********************************************************************"
  echo "* STEP 6 OF 8  -  Install applications                               *"
  echo "**********************************************************************"
  echo ""
  bootstrap-apps
  echo ""
  echo "**********************************************************************"
  echo "* STEP 7 OF 8  -  Lifeguard kit                                   *"
  echo "* WARNING: This step requires some interaction                       *"
  echo "**********************************************************************"
  echo ""
  warning-status "Please move your lifeguarded kit files to where they belong"
  request-confirmation "Did you installed SSH keys?"
  if [[ "$REPLY" =~ ^[Yy]$ ]] || [[ "$REPLY" = "" ]]; then
    set-ssh-permissions

    info-status "Adding primary identity to keychain"
    eval "$(ssh-agent -s)" >/dev/null
    ssh-add -K ~/.ssh/id_rsa
    success-status "Done"
  fi
  echo ""
  echo "**********************************************************************"
  echo "* STEP 8 OF 8  -  Configure editor                                   *"
  echo "* WARNING: This step requires some interaction                       *"
  echo "**********************************************************************"
  echo ""
  warning-status "Before proceeding please open atom and install the shell scripts"

  request-confirmation "Ready?"
  if [[ "$REPLY" =~ ^[Yy]$ ]] || [[ "$REPLY" = "" ]]; then
    bootstrap-atom
  else
    info-status "Skipping editor configuration..."
  fi
  echo ""
  echo "**********************************************************************"
  echo "* DONE  -  Please restart your computer to persist changes           *"
  echo "**********************************************************************"
  echo ""
  request-confirmation "Do you want to restart now?"
  if [[ "$REPLY" =~ ^[Yy]$ ]] || [[ "$REPLY" = "" ]]; then
    sudo shutdown -r now
  fi
  echo ""
  echo ""
  echo "Everything is ready now Sir. If you need anything else you can call me"
  echo "from anywhere by typing:"
  echo "  dotfiles"
  echo "Have a good evening Sir  ðŸ¤–"
  echo ""
}

case "$COMMAND_NAME" in
  "" | "help")  display-help;;
  "bootstrap")  bootstrap;;
  "backup")     do-backup;;
  "git")        do-backup && bootstrap-git && do-symlink;;
  "symlink")    do-symlink;;
  "macos")      bootstrap-macos;;
  "dev")        bootstrap-dev;;
  "apps")       bootstrap-apps;;
  "atom")       do-symlink && bootstrap-atom;;
  "update")     do-update;;
  "clean")      do-clean;;
  "disengage")  do-disengage;;
  "edit")       do-edit;;
  *)            display-command-error;;
esac
